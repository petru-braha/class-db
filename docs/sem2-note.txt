Creați un bloc anonim în care pentru fiecare profesor în parte aflați care este procentul (%) de studenți restanțieri din totalul de studenți la care acei profesori au pus note

Calculați procentul cu o singura zecimală.






De exemplu, un profesor a pus note la 1025 de studenți în total, dintre care 162 sunt restanțieri deci
procentul de restanțieri este de 15.8%. 

În funcție de valoarea acestui procent vom codifica în baza de date care profesor este mai exigent
asociind la gradul didactic o cifră de la 1 la 3 unde 1 este foarte exigent si 3 mai permisiv.
- daca procentul este mai mic de 14.5 atunci adăugați la coloana grad_didactic, la final, cifra 3(permisiv)
- daca procentul este între 14.6 și 16 atunci adăugați la coloana grad_didactic, la final, cifra 2(așa și asa :) )
- dacă procentul este peste 16 atunci adăugați la coloana grad_didactic, la final, cifra 1 (exigent)
Exemplu:  în baza de date ar trebui să apară Lector1 sau Colaborator3 sau Profesor2, etc.

Atenție, dacă un profesor nu predă niciun curs, atunci afișați un mesaj corespunzător împreună cu 
id-ul, numele și prenumele acelui profesor.
Obligatoriu se va utiliza un cursor ce permite update-ul informațiilor.

Apoi creați un al doilea bloc anonim în care să citiți de la tastatură o valoare între 1 și 3 și
în funcție de această valoare afișați, câți profesori au adăugat la final de grad didactic acea valoare
și care sunt acei profesori cu id-ul lor, numele și prenumele lor și gradul lor didactic.
Exemplu:  Sunt 3 profesori cu codificarea 1. Acestia sunt:
            id1 Nume 1 prenume 1 Grad_didactic1 
            ... etc



















Funcții pentru șiruri de caractere: ASCII, LENGTH, RPAD, CHR, LOWER, RTRIM, CONCAT, LPAD, SUBSTR, INITCAP, LTRIM, TRIM, INSTR, REPLACE, UPPER.

Funcții pentru numere: ABS, EXP, ROUND, ACOS, LN, SIGN, ASIN, LOG, SIN, ATAN, MOD, TAN, COS, POWER, TRUNC.

Funcții pentru variabile de tip DATE: ADD_MONTHS, MONTHS_BETWEEN, CURRENT_DATE, ROUND, CURRENT_TIMESTAMP, SYSDATE, LAST_DAY, TRUNC.

Se face automat conversia între varchar2 și toate celelalte tipuri de date, de la o variabilă de tip DATE, NUMBER sau PLS_INTEGER la LONG (dar nu și invers: LONG este mai mare, poate ține minte numere mai mari care s-ar pierde dacă ar fi convertite în NUMBER, spre exemplu). De la NUMBER la PLS_INTEGER și invers. DATE nu poate fi convertit automat în NUMBER sau PLS_INTEGER.

Conversiile explicite de date se realizează cu următoarele funcții: TO_NUMBER(), ROWIDTONCHAR(), TO_CHAR(), HEXTORAW(), TO_CLOB(), RAWTOHEX(), CHARTOROWID(), RAWTONHEX(), ROWIDTOCHAR(), TO_DATE().

rownum trebuie in subquery doar atunci cand am nevoie de sortare: pentru ca ORDER BY se executa dupa WHERE